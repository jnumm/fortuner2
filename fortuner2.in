#!/bin/sh

# fortuner2 â€“ show a fortune as a notification
# Copyright (C) 2012 Juhani Numminen <juhaninumminen0@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Set sh_word_split for zsh compatibility.
if [ -n "$ZSH_VERSION" ]; then
    setopt sh_word_split
fi

. gettext.sh

progname="@PACKAGE@"
appname="Fortuner"
version="@VERSION@"

TEXTDOMAIN="$progname"
export TEXTDOMAIN
TEXTDOMAINDIR="@LOCALEDIR@"
export TEXTDOMAINDIR

usagetext="$(eval_gettext "Usage: \${progname} [option...] [-- fortuneoption...]

 -h, --help     show help message and exit
 -v, --version  print program name and version and exit

Everything after -- is passed to fortune program.
For options supported by fortune, see man 6 fortune.")"

title="$(eval_gettext "Today's Fortune")"

fortunecmd="fortune"
notifycmd="notify-send \
--app-name=${appname} \
--icon=fortuner \
--urgency=low"

# Parse command line options.
while [ -n "$1" ]; do
    case "$1" in
        -h | --help)
            echo "$usagetext"
            exit 0
            ;;
        -v | --version)
            echo "$progname $version"
            exit 0
            ;;
        --)
            # Everything after -- is passed to fortune.
            shift
            fortunecmd="$fortunecmd $@"
            break
            ;;
        *)
            arg="$1"
            eval_gettext "\${progname}: Unknown argument: \${arg}"; echo
            echo "$usagetext" >&2
            exit 1
            ;;
    esac
    shift
done

fortune="$($fortunecmd)"

if [ -z "$fortune" ]; then
    eval_gettext "\${progname}: No fortune to show!"; echo
    exit 1
fi

# Send the notification.
$notifycmd "$title" "$fortune"
