#!/bin/sh

# fortuner2 â€“ show a fortune as a notification
# Copyright (C) 2012-2013 Juhani Numminen <juhaninumminen0@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

if [ -n "$ZSH_VERSION" ]; then
    setopt sh_word_split
fi

. gettext.sh

progname="@PACKAGE@"
appname="Fortuner"
version="@VERSION@"

TEXTDOMAIN="$progname"
export TEXTDOMAIN
TEXTDOMAINDIR="@LOCALEDIR@"
export TEXTDOMAINDIR

usagetext="$(eval_gettext "\
Usage: \${progname} [option...] [-- fortuneoption...]

 -c COUNT, --count COUNT
                how many fortunes to show
 -d SECONDS, --delay SECONDS
                sleep SECONDS after sending each fortune
 -n COMMAND, --notifycmd COMMAND
                send the notify to COMMAND
 -h, --help     show help message and exit
 -v, --version  print program name and version and exit

Everything after -- is passed to fortune program.
For options supported by fortune, see man 6 fortune.")"

title="$(eval_gettext "Today's Fortune")"

fortunecmd="fortune"
notifycmd="notify-send --icon=fortuner2 --urgency=low"

count=1
delay=0

if [ -f "@SYSCONFDIR@/${progname}.conf" ]; then
    . "@SYSCONFDIR@/${progname}.conf"
fi

if [ -f "${XDG_CONFIG_HOME:-${HOME}/.config}/user-dirs.dirs" ]; then
    . "${XDG_CONFIG_HOME:-${HOME}/.config}/user-dirs.dirs"
fi

if [ -f "${XDG_CONFIG_HOME:-${HOME}/.config}/${progname}/${progname}.conf" ]
then
    . "${XDG_CONFIG_HOME:-${HOME}/.config}/${progname}/${progname}.conf"
fi

notifyversion="$(notify-send --version | awk '{ print $2 }')"

if [ "$(echo "${notifyversion}\n0.7.5" | sort -t '.' -g | tail -n 1)" \
= "${notifyversion}" ]; then
    notifycmd="${notifycmd} --app-name=${appname}"
fi

while [ -n "$1" ]; do
    case "$1" in
        -c | --count)
            shift
            count="$1"
            if [ -z "${count##*[!0-9]*}" ]; then
			    gettext "Count must be a number!"; echo
			    exit 1
            fi
            ;;
        -d | --delay)
            shift
            delay="$1"
            if [ -z "${delay##*[!0-9]*}" ]; then
			    gettext "Delay must be a number!"; echo
                exit 1
            fi
            ;;
        -n | --notifycmd)
            shift
            notifycmd="$1"
            ;;
        -h | --help)
            echo "$usagetext"
            exit 0
            ;;
        -v | --version)
            echo "$progname $version"
            exit 0
            ;;
        --)
            shift
            fortunecmd="$fortunecmd $@"
            break
            ;;
        *)
            arg="$1"
            eval_gettext "\${progname}: Unknown argument: \${arg}"; echo
            echo "$usagetext" >&2
            exit 1
            ;;
    esac
    shift
done

while [ $count -gt 0 ]; do
    fortune="$($fortunecmd)"

    if [ -z "$fortune" ]; then
        eval_gettext "\${progname}: No fortune to show!"; echo
        exit 1
    fi

    $notifycmd "$title" "$fortune"

    count=$(expr $count - 1)

    if [ $delay -ne 0 ]; then
        sleep $delay
    fi
done
